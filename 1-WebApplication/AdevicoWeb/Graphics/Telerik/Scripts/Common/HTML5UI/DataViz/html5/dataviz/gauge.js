(function(b,a){a(["./kendo.dataviz.core","./kendo.drawing","./kendo.dataviz.themes"],b);
})(function(){(function(a,aq){var W=Math,Q=window.kendo,ar=Q.util,au=Q.ui.Widget,w=Q.deepExtend,v=Q.dataviz,j=v.autoMajorUnit,r=v.ChartElement,ac=v.NumericAxis,k=v.Axis,p=v.Box2D,t=Q.Class,D=ar.defined,O=a.isArray,P=ar.isNumber,N=v.interpolateValue,at=ar.valueOrDefault,K=v.getSpacing,an=v.round,H=v.geometry,F=v.drawing,af=H.Point,s=F.Circle,L=F.Group,ae=F.Path,am=H.Rect,ap=F.Text,ao=F.Surface;
var e=150,S=250,f="arrow",g="arrowPointer",l="barPointer",o="#000",q=0.05,u=v.COORD_PRECISION,Z=Number.MAX_VALUE,aa=-Number.MAX_VALUE,x=200,y=0.5,C=200,B=60,A=60,z=5,E=W.PI/180,I=180,M="inside",R="linear",ab="needle",ad="outside",ah="radialPointer",av="x",aw="y";
var ag=t.extend({init:function(ax,X){var Y=this;
var ay=ax.options;
r.fn.init.call(Y,X);
X=Y.options;
X.fill=X.color;
Y.scale=ax;
if(D(X.value)){X.value=W.min(W.max(X.value,ay.min),ay.max);
}else{X.value=ay.min;
}},options:{color:o},value:function(X){var ay=this;
var Y=ay.options;
var az=Y.value;
var ax=ay.scale.options;
if(arguments.length===0){return az;
}Y._oldValue=(Y._oldValue!==aq)?Y.value:ax.min;
Y.value=W.min(W.max(X,ax.min),ax.max);
if(ay.elements){ay.repaint();
}}});
var aj=ag.extend({options:{shape:ab,cap:{size:q},arrow:{width:16,height:14},animation:{type:ah,duration:e}},setRadius:function(X){var Y=this;
if(X){Y.elements.clear();
Y.render(Y.parent,Y.center,X);
}},setAngle:function(X){this.elements.transform(H.transform().rotate(X,this.center));
},repaint:function(){var az=this;
var ay=az.scale;
var ax=az.options;
var Y=ay.slotAngle(ax._oldValue);
var X=ay.slotAngle(ax.value);
if(ax.animation.transitions===false){az.setAngle(X);
}else{new ak(az.elements,w(ax.animation,{oldAngle:Y,newAngle:X})).play();
}},render:function(){var aA=this;
var az=aA.scale;
var X=az.arc.center;
var ay=aA.options;
var ax=az.slotAngle(az.options.min);
var Y=new L();
if(ay.animation!==false){w(ay.animation,{startAngle:0,center:X,reverse:az.options.reverse});
}if(ay.shape===ab){Y.append(aA._renderNeedle(),aA._renderCap());
}else{Y.append(aA._renderArrow());
}aA.elements=Y;
aA.setAngle(E);
return Y;
},reflow:function(X){var az=this;
var ax=az.center=X.center;
var ay=az.radius=X.getRadiusX();
var Y=az.capSize=Math.round(ay*az.options.cap.size);
az.bbox=am.fromPoints(new af(ax.x-Y,ax.y-Y),new af(ax.x+Y,ax.y+Y));
},_renderNeedle:function(){var aA=this;
var az=aA.options;
var Y=aA.scale.options.minorTicks.size;
var X=aA.center;
var ax=az.color;
var ay=new ae({fill:{color:ax},stroke:{color:ax,width:y}});
ay.moveTo(X.x+aA.radius-Y,X.y).lineTo(X.x,X.y-(aA.capSize/2)).lineTo(X.x,X.y+(aA.capSize/2)).close();
return ay;
},_renderCap:function(){var az=this;
var ay=az.options;
var Y=ay.cap.color||ay.color;
var ax=new H.Circle(az.center,az.capSize);
var X=new F.Circle(ax,{fill:{color:Y},stroke:{color:Y}});
return X;
}});
var al=ac.extend({init:function(X){var Y=this;
Y.options=w({},Y.options,X);
Y.options.majorUnit=Y.options.majorUnit||j(Y.options.min,Y.options.max);
Y.options.minorUnit=Y.options.minorUnit||Y.options.majorUnit/10;
k.fn.init.call(Y,Y.options);
},options:{min:0,max:100,majorTicks:{size:15,align:M,color:o,width:y,visible:true},minorTicks:{size:10,align:M,color:o,width:y,visible:true},startAngle:-30,endAngle:210,labels:{position:M,padding:2}},render:function(Y,ay){var az=this;
var ax=az.options;
var X=az.renderArc(Y,ay);
az.bbox=X.bbox();
az.labelElements=az.renderLabels();
az.ticks=az.renderTicks();
az.ranges=az.renderRanges();
},reflow:function(X){var az=this;
var ax=az.options;
var Y=X.center();
var ay=W.min(X.height(),X.width())/2;
if(az.bbox!==aq){az.bbox=az.arc.bbox();
az.radius(az.arc.getRadiusX());
az.repositionRanges();
az.renderLabels();
}else{return az.render(Y,ay);
}},slotAngle:function(aC){var ay=this.options;
var aB=ay.startAngle;
var aA=ay.reverse;
var X=ay.endAngle-aB;
var ax=ay.min;
var Y=ay.max;
var az;
if(aA){az=ay.endAngle-(aC-ax)/(Y-ax)*X;
}else{az=((aC-ax)/(Y-ax)*X)+aB;
}return az+I;
},renderLabels:function(){var aV=this;
var aO=aV.options;
var aN=aO.majorTicks.size;
var Y=aV.arc.clone();
var aR=Y.getRadiusX();
var aW=aV.tickAngles(Y,aO.majorUnit);
var aH=aV.labels;
var ax=aH.length;
var aJ=aO.labels;
var aP=aJ.padding;
var aS=aR*0.05;
var aU=aO.rangeSize=aO.rangeSize||aR*0.1;
var aT=aO.ranges||[];
var aB,aA,aF;
var X,aE,aM,aC,ay,az,aD;
var aI=new L();
var aL,aG,aQ,aK;
if(aV.options.rangeDistance!==aq){aS=aV.options.rangeDistance;
}else{aV.options.rangeDistance=aS;
}if(aJ.position===M){aR-=aN;
if(aT.length&&aV.labelElements===aq){aR-=aU+aS;
}Y.setRadiusX(aR).setRadiusY(aR);
}for(aC=0;
aC<ax;
aC++){aE=aH[aC];
aB=aE.box.width()/2;
aA=aE.box.height()/2;
X=aW[aC];
aF=(X-I)*E;
aD=aJ.position===M;
aM=Y.pointAt(X);
ay=aM.x+(W.cos(aF)*(aB+aP)*(aD?1:-1));
az=aM.y+(W.sin(aF)*(aA+aP)*(aD?1:-1));
aE.reflow(new v.Box2D(ay-aB,az-aA,ay+aB,az+aA));
aG=new af(aE.box.x1,aE.box.y1);
if(aV.labelElements===aq){aL=b(aE,aO.labels);
aI.append(aL);
}else{aL=aV.labelElements.children[aC];
aQ=aL.bbox().origin;
aK=aL.transform()||H.transform();
aK.translate(aG.x-aQ.x,aG.y-aQ.y);
aL.transform(aK);
}aV.bbox=am.union(aV.bbox,aL.bbox());
}return aI;
},repositionRanges:function(){var aC=this;
var X=aC.arc;
var aA=aC.ranges.children;
var aB=aC.options.rangeSize;
var ay=aC.options.rangeDistance;
var az,ax;
if(aA.length>0){az=aC.getRangeRadius();
if(aC.options.labels.position===M){az+=aB+ay;
}ax=az+(aB/2);
for(var Y=0;
Y<aA.length;
Y++){aA[Y]._geometry.setRadiusX(ax).setRadiusY(ax);
}aC.bbox=am.union(aC.bbox,aC.ranges.bbox());
}},renderRanges:function(){var aI=this;
var X=aI.arc;
var aD=new L();
var Y,aJ;
var aG=aI.rangeSegments();
var aH=aG.length;
var aE=aI.options.reverse;
var ay=aI.radius();
var aC=aI.options.rangeSize;
var az=aI.options.rangeDistance;
var aF,aB,aA,ax;
if(aH){aB=aI.getRangeRadius();
aI.radius(aI.radius()-aC-az);
for(ax=0;
ax<aH;
ax++){aF=aG[ax];
Y=aI.slotAngle(aF[aE?"to":"from"]);
aJ=aI.slotAngle(aF[!aE?"to":"from"]);
if(aJ-Y!==0){aA=new H.Arc(X.center,{radiusX:aB+(aC/2),radiusY:aB+(aC/2),startAngle:Y,endAngle:aJ});
aD.append(new F.Arc(aA,{stroke:{width:aC,color:aF.color,opacity:aF.opacity}}));
}}}return aD;
},rangeSegments:function(){var ax=this;
var aC=ax.options;
var aE=aC.ranges||[];
var X=aE.length;
var aD;
var aI;
var Y=aC.rangePlaceholderColor;
var aH=[];
var aG;
var aB=aC.min;
var aA=aC.max;
var ay,az;
function aF(aK,aM,aJ,aL){return{from:aK,to:aM,color:aJ,opacity:aL};
}if(X){aH.push(aF(aB,aA,Y));
for(ay=0;
ay<X;
ay++){aD=J(aE[ay],aB,aA);
aI=aH.length;
for(az=0;
az<aI;
az++){aG=aH[az];
if(aG.from<=aD.from&&aD.from<=aG.to){aH.push(aF(aD.from,aD.to,aD.color,aD.opacity));
if(aG.from<=aD.to&&aD.to<=aG.to){aH.push(aF(aD.to,aG.to,Y,aD.opacity));
}aG.to=aD.from;
break;
}}}}return aH;
},getRangeRadius:function(){var aB=this;
var ax=aB.options;
var Y=ax.majorTicks.size;
var aA=ax.rangeSize;
var az=ax.rangeDistance;
var X=aB.arc;
var ay;
if(ax.labels.position===ad){ay=X.getRadiusX()-Y-az-aA;
}else{ay=X.getRadiusX()-aA;
}return ay;
},renderArc:function(Y,ay){var az=this;
var ax=az.options;
var X=az.arc=new H.Arc(Y,{radiusX:ay,radiusY:ay,startAngle:ax.startAngle+I,endAngle:ax.endAngle+I});
return X;
},renderTicks:function(){var aD=this;
var Y=aD.arc;
var aB=aD.options;
var ay=aB.labels.position;
var X=new L();
var az=aB.majorTicks.size;
var aA=aB.minorTicks.size;
var aE=Y.clone();
var aC=aE.getRadiusX();
function ax(aF,aJ,aP,aL){var aM=new L(),aG=aF.center,aI=aF.getRadiusX(),aH,aO,aK,aN=aP.size,aQ=aL.visible;
if(aQ){for(aH=0;
aH<aJ.length;
aH++){aO=aF.pointAt(aJ[aH]);
aK=new af(aG.x+aI-aL.size,aG.y).rotate(aJ[aH],aG);
aM.append(new ae({stroke:{color:aL.color,width:aL.width}}).moveTo(aO).lineTo(aK));
}}return aM;
}aD.majorTickAngles=aD.tickAngles(Y,aB.majorUnit);
aD.majorTicks=ax(aE,aD.majorTickAngles,aB.majorUnit,aB.majorTicks);
X.append(aD.majorTicks);
aD._tickDifference=az-aA;
if(ay===ad){aE.setRadiusX(aC-az+aA).setRadiusY(aC-az+aA);
}aD.minorTickAngles=aD.normalizeTickAngles(aD.tickAngles(Y,aB.minorUnit));
aD.minorTicks=ax(aE,aD.minorTickAngles,aB.minorUnit,aB.minorTicks,aB.majorUnit);
X.append(aD.minorTicks);
return X;
},normalizeTickAngles:function(X){var az=this;
var ax=az.options;
var ay=ax.majorUnit/ax.minorUnit;
for(var Y=X.length-1;
Y>=0;
Y--){if(Y%ay===0){X.splice(Y,1);
}}return X;
},tickAngles:function(aC,aF){var aD=this;
var ax=aD.options;
var aB=ax.reverse;
var aA=ax.max-ax.min;
var X=aC.endAngle-aC.startAngle;
var ay=aC.startAngle;
var aG=aA/aF;
var aE=X/aG;
var az=[];
var Y;
if(aB){ay+=X;
aE=-aE;
}for(Y=0;
Y<aG;
Y++){az.push(an(ay,u));
ay+=aE;
}if(an(ay)<=aC.endAngle){az.push(ay);
}return az;
},radius:function(ax){var ay=this;
var Y=ay.parent;
var X=ay.arc.center;
if(ax){ay.arc.setRadiusX(ax).setRadiusY(ax);
ay.repositionTicks(ay.majorTicks.children,ay.majorTickAngles);
ay.repositionTicks(ay.minorTicks.children,ay.minorTickAngles,true);
}else{return ay.arc.getRadiusX();
}},repositionTicks:function(aE,aC,ax){var aB=this;
var X=ax?(aB._tickDifference||0):0;
var aD=aB.arc;
var az=aD.getRadiusX();
if(ax&&aB.options.labels.position===ad&&X!==0){aD=aB.arc.clone();
aD.setRadiusX(az-X).setRadiusY(az-X);
}for(var Y=0;
Y<aE.length;
Y++){var ay=aD.pointAt(aC[Y]);
var aA=aE[Y].segments;
var aF=ay.x-aA[0].anchor().x;
var aG=ay.y-aA[0].anchor().y;
aE[Y].transform(new H.Transformation().translate(aF,aG));
}}});
var G=au.extend({init:function(X,aD){var Y=this;
var ay;
var aB;
var aA;
var aC=v.ui.themes||{};
var az;
Q.destroy(X);
a(X).empty();
au.fn.init.call(Y,X);
Y.wrapper=Y.element;
Y._originalOptions=w({},aD);
ay=w({},Y.options,aD);
aA=ay.theme;
az=aC[aA]||aC[aA.toLowerCase()];
aB=aA&&az?az.gauge:{};
Y.options=w({},aB,ay);
if(a.isArray(ay.pointer)){for(var ax=0;
ax<ay.pointer.length;
ax++){Y.options.pointer[ax]=w({},aB.pointer,ay.pointer[ax]);
}}Y.element.addClass("k-gauge");
Y.surface=Y._createSurface();
Y.redraw();
},options:{plotArea:{},theme:"default",renderAs:"",pointer:{},scale:{},gaugeArea:{}},destroy:function(){this.surface.destroy();
au.fn.destroy.call(this);
},value:function(ax){var Y=this;
var X=Y.pointers[0];
if(arguments.length===0){return X.value();
}X.value(ax);
Y._setValueOptions(ax);
},_draw:function(){var X=this.surface;
X.clear();
X.draw(this._visuals);
},exportVisual:function(){return this._visuals;
},allValues:function(az){var ay=this;
var ax=ay.pointers;
var X=[];
var Y;
if(arguments.length===0){for(Y=0;
Y<ax.length;
Y++){X.push(ax[Y].value());
}return X;
}if(a.isArray(az)){for(Y=0;
Y<az.length;
Y++){if(P(az[Y])){ax[Y].value(az[Y]);
}}}ay._setValueOptions(az);
},_setValueOptions:function(ax){var Y=[].concat(this.options.pointer);
ax=[].concat(ax);
for(var X=0;
X<ax.length;
X++){Y[X].value=ax[X];
}},_resize:function(){var ax=this;
var Y=ax.options.transitions;
var X;
ax.options.transitions=false;
for(X=0;
X<ax.pointers.length;
X++){ax.pointers[X].options.animation.transitions=false;
}ax.redraw();
ax.options.transitions=Y;
for(X=0;
X<ax.pointers.length;
X++){ax.pointers[X].options.animation.transitions=Y;
}},redraw:function(){var ax=this;
var Y=w(ax._getSize(),ax.options.gaugeArea);
var ay=new am([0,0],[Y.width,Y.height]);
var X;
ax.surface.clear();
ax.gaugeArea=ax._createGaugeArea();
ax.surface.element.css({width:Y.width,height:Y.height});
ax._createModel();
X=d(ay.bbox(),ax._gaugeAreaMargin);
ax.reflow(X);
},_createGaugeArea:function(){var aB=this;
var az=aB.options.gaugeArea;
var aA=aB.surface.size();
var ay=aB._gaugeAreaMargin=az.margin||z;
var Y=az.border||{};
var X=new am([0,0],[aA.width,aA.height]);
if(Y.width>0){X=d(X,Y.width);
}var ax=ae.fromRect(X,{stroke:{color:Y.width?Y.color:"",width:Y.width,dashType:Y.dashType,lineJoin:"round",lineCap:"round"},fill:{color:az.background}});
return ax;
},_createSurface:function(){var ax=this;
var X=ax.options;
var Y=ax._getSize();
Y=X.gaugeArea?w(Y,X.gaugeArea):Y;
var ay=a("<div></div>").appendTo(ax.element).css({width:Y.width,height:Y.height});
return new F.Surface.create(ay,{type:X.renderAs});
},getSize:function(){return this._getSize();
},_getSize:function(){var ax=this;
var X=ax.element;
var ay=X.width();
var Y=X.height();
if(!ay){ay=C;
}if(!Y){Y=x;
}return{width:ay,height:Y};
}});
var ai=G.extend({init:function(X,Y){var ax=this;
G.fn.init.call(ax,X,Y);
Q.notify(ax,v.ui);
},options:{name:"RadialGauge",transitions:true,gaugeArea:{background:""}},reflow:function(X){var aA=this;
var ay=aA.pointers;
var az=aA.scale.reflow(X);
aA._initialPlotArea=aA.scale.bbox;
for(var Y=0;
Y<ay.length;
Y++){var ax=ay[Y].reflow(aA.scale.arc);
aA._initialPlotArea=am.union(aA._initialPlotArea,ay[Y].bbox);
}aA.fitScale(X);
aA.alignScale(X);
aA._buildVisual(aA.gaugeArea,ay,aA.scale);
aA._draw();
},_buildVisual:function(Y,ay,az){var aA=new L();
var X;
aA.append(Y);
aA.append(az.ticks);
aA.append(az.ranges);
for(var ax=0;
ax<ay.length;
ax++){X=ay[ax];
X.render();
aA.append(X.elements);
X.value(X.options.value);
}aA.append(az.labelElements);
this._visuals=aA;
},fitScale:function(Y){var aH=this;
var aF=aH.scale;
var X=aF.arc;
var aE=aH._initialPlotArea;
var aG=W.abs(aH.getDiff(aE,Y));
var aC=an(aG,u);
var ay=an(-aG,u);
var aD,aB,az,aA;
var ax=0;
while(ax<100){ax++;
if(aC!=aA){aD=aH.getPlotBox(aC,Y,X);
if(0<=aD&&aD<=2){break;
}}if(ay!=aA){az=aH.getPlotBox(ay,Y,X);
if(0<=az&&az<=2){break;
}}if(aD>0&&az>0){aA=aC*2;
}else{if(aD<0&&az<0){aA=ay*2;
}else{aA=an(((aC+ay)/2)||1,u);
}}aB=aH.getPlotBox(aA,Y,X);
if(0<=aB&&aB<=2){break;
}if(aB>0){ay=aA;
az=aB;
}else{aC=aA;
aD=aB;
}}},getPlotBox:function(aB,Y,X){var aC=this;
var aA=aC.scale;
var ay=aC.pointers;
var az=X.getRadiusX();
X=X.clone();
X.setRadiusX(az+aB).setRadiusY(az+aB);
aA.arc=X;
aA.reflow(Y);
aC.plotBbox=aA.bbox;
for(var ax=0;
ax<ay.length;
ax++){ay[ax].reflow(X);
aC.plotBbox=am.union(aC.plotBbox,ay[ax].bbox);
}return aC.getDiff(aC.plotBbox,Y);
},getDiff:function(Y,X){return W.min(X.width()-Y.width(),X.height()-Y.height());
},alignScale:function(X){var aD=this;
var aA=aD.plotBbox.center();
var Y=X.center();
var ay=aA.x-Y.x;
var az=aA.y-Y.y;
var aC=aD.scale;
var aB=aD.pointers;
aC.arc.center.x-=ay;
aC.arc.center.y-=az;
aC.reflow(X);
for(var ax=0;
ax<aB.length;
ax++){aB[ax].reflow(aC.arc);
aD.plotBbox=am.union(aC.bbox,aB[ax].bbox);
}},_createModel:function(){var aA=this;
var ax=aA.options;
var ay=ax.pointer;
var az=aA.scale=new al(ax.scale);
var X;
aA.pointers=[];
ay=a.isArray(ay)?ay:[ay];
for(var Y=0;
Y<ay.length;
Y++){X=new aj(az,w({},ay[Y],{animation:{transitions:ax.transitions}}));
aA.pointers.push(X);
}}});
var T=G.extend({init:function(X,ax){var Y=this;
G.fn.init.call(Y,X,ax);
Q.notify(Y,v.ui);
},options:{name:"LinearGauge",transitions:true,gaugeArea:{background:""},scale:{vertical:true}},reflow:function(X){var aC=this;
var aB=aC.surface;
var aA=aC.pointers;
var ax=X.origin.x;
var ay=X.origin.y;
var Y=new v.Box2D(ax,ax,ax+X.width(),ay+X.height());
aC.scale.reflow(Y);
for(var az=0;
az<aA.length;
az++){aA[az].reflow();
}aC.bbox=aC._getBox(Y);
aC._alignElements();
aC._shrinkElements();
aC._buildVisual();
aC._draw();
},_buildVisual:function(){var az=this;
var aA=new L();
var ay=az.scale.render();
var ax=az.pointers;
var X;
aA.append(az.gaugeArea);
aA.append(ay);
for(var Y=0;
Y<ax.length;
Y++){X=ax[Y];
aA.append(X.render());
X.value(X.options.value);
}az._visuals=aA;
},_createModel:function(){var aB=this;
var ay=aB.options;
var az=ay.pointer;
var aA=aB.scale=new V(ay.scale);
var X,Y;
aB.pointers=[];
az=a.isArray(az)?az:[az];
for(var ax=0;
ax<az.length;
ax++){Y=w({},az[ax],{animation:{transitions:ay.transitions}});
if(Y.shape===f){X=new h(aA,Y);
}else{X=new m(aA,Y);
}aB.pointers.push(X);
}},_getSize:function(){var Y=this;
var X=Y.element;
var az=X.width();
var ax=X.height();
var ay=Y.options.scale.vertical;
if(!az){az=ay?B:C;
}if(!ax){ax=ay?x:A;
}return{width:az,height:ax};
},_getBox:function(X){var aC=this;
var aA=aC.scale;
var az=aC.pointers;
var Y=X.center();
var ay=az[0].box.clone().wrap(aA.box);
var aB;
for(var ax=0;
ax<az.length;
ax++){ay.wrap(az[ax].box.clone());
}if(aA.options.vertical){aB=ay.width()/2;
ay=new p(Y.x-aB,X.y1,Y.x+aB,X.y2);
}else{aB=ay.height()/2;
ay=new p(X.x1,Y.y-aB,X.x2,Y.y+aB);
}return ay;
},_alignElements:function(){var aC=this;
var aA=aC.scale;
var az=aC.pointers;
var aB=aA.box;
var X=az[0].box.clone().wrap(aA.box);
var ay=aC.bbox;
var Y,ax;
for(ax=0;
ax<az.length;
ax++){X.wrap(az[ax].box.clone());
}if(aA.options.vertical){Y=ay.center().x-X.center().x;
aA.reflow(new p(aB.x1+Y,ay.y1,aB.x2+Y,ay.y2));
}else{Y=ay.center().y-X.center().y;
aA.reflow(new p(ay.x1,aB.y1+Y,ay.x2,aB.y2+Y));
}for(ax=0;
ax<az.length;
ax++){az[ax].reflow(aC.bbox);
}},_shrinkElements:function(){var aB=this;
var az=aB.scale;
var ax=aB.pointers;
var aA=az.box.clone();
var ay=az.options.vertical?"y":"x";
var Y=ax[0].box;
var X;
for(X=0;
X<ax.length;
X++){Y.wrap(ax[X].box.clone());
}aA[ay+1]+=W.max(aA[ay+1]-Y[ay+1],0);
aA[ay+2]-=W.max(Y[ay+2]-aA[ay+2],0);
az.reflow(aA);
for(X=0;
X<ax.length;
X++){ax[X].reflow(aB.bbox);
}}});
var V=ac.extend({init:function(X){var Y=this;
Y.options=w({},Y.options,X);
Y.options=w({},Y.options,{labels:{mirror:Y.options.mirror}});
Y.options.majorUnit=Y.options.majorUnit||j(Y.options.min,Y.options.max);
k.fn.init.call(Y,Y.options);
Y.options.minorUnit=Y.options.minorUnit||Y.options.majorUnit/10;
},options:{min:0,max:50,majorTicks:{size:15,align:M,color:o,width:y,visible:true},minorTicks:{size:10,align:M,color:o,width:y,visible:true},line:{width:y},labels:{position:M,padding:2},mirror:false,_alignLines:false},render:function(){var aA=this;
var X=aA.elements=new L();
var Y=aA.renderLabels();
var ay=aA.renderLine();
var az=aA.renderTicks();
var ax=aA.renderRanges();
X.append(ay,Y,az,ax);
return X;
},renderRanges:function(){var aI=this;
var aB=aI.options;
var az=aB.min;
var ay=aB.max;
var aD=aB.ranges||[];
var aJ=aB.vertical;
var aA=aB.labels.mirror;
var Y=new L();
var X=aD.length;
var aE=aB.rangeSize||aB.minorTicks.size/2;
var aC,aF,aG,aH,ax;
if(X){for(ax=0;
ax<X;
ax++){aC=J(aD[ax],az,ay);
aF=aI.getSlot(aC.from,aC.to);
aG=aJ?aI.lineBox():aF;
aH=aJ?aF:aI.lineBox();
if(aJ){aG.x1-=aE*(aA?-1:1);
}else{aH.y2+=aE*(aA?-1:1);
}Y.append(ae.fromRect(new am([aG.x1,aH.y1],[aG.x2-aG.x1,aH.y2-aH.y1]),{fill:{color:aC.color,opacity:aC.opacity},stroke:{}}));
}}return Y;
},renderLabels:function(){var az=this;
var ay=az.options;
var ax=az.labels;
var X=new L();
for(var Y=0;
Y<ax.length;
Y++){X.append(b(ax[Y],ay.labels));
}return X;
},renderLine:function(){var aA=this;
var az=aA.options;
var Y=az.line;
var ax=aA.lineBox();
var ay;
var X=new L();
if(Y.width>0&&Y.visible){ay=new ae({stroke:{color:Y.color,dashType:Y.dashType,width:Y.width}});
ay.moveTo(ax.x1,ax.y1).lineTo(ax.x2,ax.y2);
X.append(ay);
}return X;
},renderTicks:function(){var aC=this;
var aE=new L();
var az=aC.options;
var Y=aC.lineBox();
var ay=az.labels.mirror;
var ax=az.majorTicks.visible?az.majorUnit:0;
var aD={_alignLines:az._alignLines,vertical:az.vertical};
var aB,X;
function aA(aI,aH){var aG,aF=aI.length;
if(aH.visible){for(aG=aH.skip;
aG<aF;
aG+=aH.step){if(aG%aH.skipUnit===0){continue;
}aD.tickX=ay?Y.x2:Y.x2-aH.size;
aD.tickY=ay?Y.y1-aH.size:Y.y1;
aD.position=aI[aG];
aE.append(aC.renderAxisTick(aD,aH));
}}}aA(aC.getMajorTickPositions(),az.majorTicks);
aA(aC.getMinorTickPositions(),w({},{skipUnit:ax/az.minorUnit},az.minorTicks));
return aE;
},renderAxisTick:function(Y,az){var aB=Y.tickX;
var aC=Y.tickY;
var ax=Y.position;
var ay,X,aA;
if(Y.vertical){ay=new af(aB,ax);
X=new af(aB+az.size,ax);
}else{ay=new af(ax,aC);
X=new af(ax,aC+az.size);
}aA=new ae({stroke:{color:az.color,width:az.width}}).moveTo(ay).lineTo(X);
return aA;
}});
var U=ag.extend({init:function(ax,X){var Y=this;
ag.fn.init.call(Y,ax,X);
Y.options=w({track:{visible:D(X.track)}},Y.options);
},options:{shape:l,track:{border:{width:1}},color:o,border:{width:1},opacity:1,margin:K(3),animation:{type:l},visible:true},reflow:function(){var ay=this;
var ax=ay.options;
var aC=ay.scale;
var aD=aC.lineBox();
var aG=ax.track.size||ax.size;
var aA=ax.size/2;
var Y=aC.options.mirror;
var X=K(ax.margin);
var aH=aC.options.vertical;
var aE=aH?X[Y?"left":"right"]:X[Y?"bottom":"top"];
var az,aB,aF;
aE=Y?-aE:aE;
if(aH){aF=new p(aD.x1+aE,aD.y1,aD.x1+aE,aD.y2);
if(Y){aF.x1-=aG;
}else{aF.x2+=aG;
}if(ax.shape!==l){aB=new p(aD.x2+aE,aD.y1-aA,aD.x2+aE,aD.y2+aA);
az=aB;
}}else{aF=new p(aD.x1,aD.y1-aE,aD.x2,aD.y1-aE);
if(Y){aF.y2+=aG;
}else{aF.y1-=aG;
}if(ax.shape!==l){aB=new p(aD.x1-aA,aD.y1-aE,aD.x2+aA,aD.y1-aE);
az=aB;
}}ay.trackBox=aF;
ay.pointerRangeBox=aB;
ay.box=az||aF.clone().pad(ax.border.width);
},getElementOptions:function(){var Y=this.options;
var X=new L();
var ax=this.scale;
return{fill:{color:Y.color,opacity:Y.opacity},stroke:D(Y.border)?{color:Y.border.width?Y.border.color||Y.color:"",width:Y.border.width,dashType:Y.border.dashType,opacity:Y.opacity}:null};
},_margin:function(){var ay=this;
var ax=ay.options;
var az=ay.scale;
var Y=az.options.mirror;
var X=K(ax.margin);
var aB=az.options.vertical;
var aA=aB?X[Y?"left":"right"]:X[Y?"bottom":"top"];
return aA;
}});
var h=U.extend({init:function(Y,X){U.fn.init.call(this,Y,X);
if(this.options.size===aq){this.options.size=this.scale.options.majorTicks.size*0.6;
}},pointerShape:function(aE){var aD=this;
var Y=aD.options;
var az=aD.scale;
var aC=Y.size;
var aF=az.options.vertical;
var X=aC/2;
var aB=(az.options.mirror?-1:1);
var ay=az.options.reverse;
var ax,aA;
if(aF){ax=ay?"y2":"y1";
aA=[new af(0,0-X),new af(0-aB*aC,0),new af(0,0+X)];
}else{ax=ay?"x1":"x2";
aA=[new af(0-X,0),new af(0,0+aB*aC),new af(0+X,0)];
}return aA;
},repaint:function(){var ay=this;
var ax=ay.scale;
var Y=ay.options;
var X=new i(ay.elements,w(Y.animation,{vertical:ax.options.vertical,mirror:ax.options.mirror,margin:ay._margin(Y.margin),from:ax.getSlot(Y._oldValue),to:ax.getSlot(Y.value)}));
if(Y.animation.transitions===false){X.options.duration=0;
}X.setup();
X.play();
},render:function(){var aB=this;
var ax=aB.options;
var Y=new L();
var ay=aB.scale;
var X=aB.getElementOptions();
var az=aB.pointerShape(ax.value);
ax.animation.type=g;
Y=new ae({stroke:X.stroke,fill:X.fill}).moveTo(az[0]).lineTo(az[1]).lineTo(az[2]).close();
var aA=ay.getSlot(ax.value);
Y.transform(H.transform().translate(aA.x1,aA.y1));
aB.elements=Y;
return Y;
}});
var m=U.extend({init:function(Y,X){U.fn.init.call(this,Y,X);
if(this.options.size===aq){this.options.size=this.scale.options.majorTicks.size*0.3;
}},pointerShape:function(aL){var aK=this;
var aA=aK.options;
var aF=aK.scale;
var aM=aF.options.vertical;
var az=aF.options.mirror;
var Y=az==aM?-1:1;
var aH=aA.size*Y;
var ay=aF.getSlot(aF.options.min);
var aJ=aF.getSlot(aL);
var X=aM?aw:av;
var aI=aM?av:aw;
var ax=aK._margin()*Y;
var aG=[];
var aB=new af();
aB[X]=ay[X+"1"];
aB[aI]=ay[aI+"1"];
var aC=new af();
aC[X]=aJ[X+"1"];
aC[aI]=aJ[aI+"1"];
if(aM){aB.translate(ax,0);
aC.translate(ax,0);
}else{aB.translate(0,ax);
aC.translate(0,ax);
}var aD=aC.clone();
var aE=aB.clone();
if(aM){aD.translate(aH,0);
aE.translate(aH,0);
}else{aD.translate(0,aH);
aE.translate(0,aH);
}return[aB,aC,aD,aE];
},repaint:function(){var aB=this;
var az=aB.scale;
var ax=aB.options;
var aA=aB.pointerShape(ax.value);
var ay=aB.elements.children[0];
var Y=aB.pointerShape(ax._oldValue);
ay.moveTo(aA[0]).lineTo(aA[1]).lineTo(aA[2]).lineTo(aA[3]).close();
var X=new n(ay,w(ax.animation,{reverse:az.options.reverse,vertical:az.options.vertical,oldPoints:[Y[1],Y[2]],newPoints:[aA[1],aA[2]]}));
if(ax.animation.transitions===false){X.options.duration=0;
}X.setup();
X.play();
},render:function(){var aA=this;
var ax=aA.options;
var Y=new L();
var az=aA.scale;
var X=aA.getElementOptions();
var ay=new ae({stroke:X.stroke,fill:X.fill});
Y.append(ay);
aA.elements=Y;
return Y;
}});
var ak=F.Animation.extend({init:function(X,Y){F.Animation.fn.init.call(this,X,Y);
Y=this.options;
Y.duration=W.max((W.abs(Y.newAngle-Y.oldAngle)/Y.duration)*1000,1);
},options:{easing:R,duration:e},step:function(ay){var Y=this;
var ax=Y.options;
var X=N(ax.oldAngle,ax.newAngle,ay);
Y.element.transform(H.transform().rotate(X,ax.center));
}});
F.AnimationFactory.current.register(ah,ak);
var i=F.Animation.extend({options:{easing:R,duration:S},setup:function(){var aA=this.options;
var ay=this.element.bbox().width()/2;
var az=aA.margin;
var Y=aA.from;
var aB=aA.to;
var X=aA.vertical?"x1":"y1";
if(aA.mirror==aA.vertical){Y[X]-=az;
aB[X]-=az;
}else{Y[X]+=az;
aB[X]+=az;
}var ax=this.fromScale=new af(Y.x1,Y.y1);
var aC=this.toScale=new af(aB.x1,aB.y1);
if(aA.duration!==0){aA.duration=W.max((ax.distanceTo(aC)/aA.duration)*1000,1);
}},step:function(X){var Y=N(this.fromScale.x,this.toScale.x,X);
var ax=N(this.fromScale.y,this.toScale.y,X);
this.element.transform(H.transform().translate(Y,ax));
}});
F.AnimationFactory.current.register(g,i);
var n=F.Animation.extend({options:{easing:R,speed:S},setup:function(){var Y=this.element;
var aA=this.options;
var ay=aA.newPoints;
var az=aA.oldPoints;
var X=this.axis=aA.vertical?aw:av;
var aB=this.to=ay[0][X];
var ax=this.from=az[0][X];
if(aA.duration!==0){aA.duration=W.max((W.abs(aB-ax)/aA.speed)*1000,1);
}this._set(ax);
},step:function(X){var Y=N(this.from,this.to,X);
this._set(Y);
},_set:function(ax){var Y="set"+this.axis.toUpperCase();
var X=this.options.newPoints;
X[0][Y](ax);
X[1][Y](ax);
}});
F.AnimationFactory.current.register(l,n);
function b(ay,aA){var az=ay.box;
var aE=ay.children[0].box;
var Y=aA.border||{};
var X=aA.background||"";
var ax=new L();
var aB,aC,aF;
aF=ae.fromRect(new am([az.x1,az.y1],[az.width(),az.height()]),{stroke:{}});
var aD=new ap(ay.text,new af(aE.x1,aE.y1),{font:aA.font,fill:{color:aA.color}});
aC=c(aD.bbox().clone(),aA.padding);
aB=ae.fromRect(aC,{stroke:{color:Y.width?Y.color:"",width:Y.width,dashType:Y.dashType,lineJoin:"round",lineCap:"round"},fill:{color:X}});
ax.append(aF);
ax.append(aB);
ax.append(aD);
return ax;
}function J(ay,ax,Y){var X=D(ay.from)?ay.from:aa;
var az=D(ay.to)?ay.to:Z;
ay.from=W.max(W.min(az,X),ax);
ay.to=W.min(W.max(az,X),Y);
return ay;
}function c(X,az){var Y=X.getOrigin();
var ax=X.getSize();
var ay=K(az);
X.setOrigin([Y.x-ay.left,Y.y-ay.top]);
X.setSize([ax.width+(ay.left+ay.right),ax.height+(ay.top+ay.bottom)]);
return X;
}function d(X,ax){var Y=K(ax);
Y.left=-Y.left;
Y.top=-Y.top;
Y.right=-Y.right;
Y.bottom=-Y.bottom;
return c(X,Y);
}v.ui.plugin(ai);
v.ui.plugin(T);
v.ExportMixin.extend(G.fn);
w(v,{Gauge:G,RadialPointer:aj,LinearPointer:U,ArrowLinearPointer:h,BarLinearPointer:m,LinearScale:V,RadialScale:al,LinearGauge:T,RadialGauge:ai});
})(window.kendo.jQuery);
return window.kendo;
},typeof define=="function"&&define.amd?define:function(a,b){b();
});
