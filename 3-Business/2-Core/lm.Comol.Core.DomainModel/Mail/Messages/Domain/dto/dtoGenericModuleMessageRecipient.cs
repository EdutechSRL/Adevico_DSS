using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using lm.Comol.Core.DomainModel;
using lm.Comol.Core.MailCommons.Domain;

namespace lm.Comol.Core.Mail.Messages
{
    [Serializable]
    public class dtoGenericModuleMessageRecipient : lm.Comol.Core.Mail.Messages.dtoModuleRecipientMessages
    {
        public virtual System.Guid Identifier { get; set; }
        public virtual String RoleName { get; set; }
        public virtual String ProfileTypeName { get; set; }
        public virtual Int32 IdRole { get; set; }
        public virtual Boolean IsAutoGeneratedPerson { get; set; }
        public override String FirstLetter { get { return (!String.IsNullOrEmpty(Surname)) ? Surname.Trim().Substring(0, 1).ToLower() : (!String.IsNullOrEmpty(MailAddress) ? MailAddress.Substring(0, 1).ToLower() : ""); } } 
       
        public dtoGenericModuleMessageRecipient()
            : base()
        {
            if (Identifier == System.Guid.Empty)
                Identifier = System.Guid.NewGuid();
        }

        public dtoGenericModuleMessageRecipient(long id)
            : base(id)
        {
            if (Identifier == System.Guid.Empty)
                Identifier = System.Guid.NewGuid();
        }
        public dtoGenericModuleMessageRecipient(lm.Comol.Core.Mail.Messages.dtoModuleRecipientMessages obj)
            : base(obj.Id)
        {
            Deleted = obj.Deleted;
            MessageNumber = obj.MessageNumber;
            IdAgency = obj.IdAgency;
            AgencyName = obj.AgencyName;
            Messages = obj.Messages;
            IdLanguage = obj.IdLanguage;
            CodeLanguage = obj.CodeLanguage;
            Type = obj.Type;
            IdPerson = obj.IdPerson;
            ModuleCode = obj.ModuleCode;
            IdUserModule = obj.IdUserModule;
            MailAddress = obj.MailAddress;
            if (String.IsNullOrEmpty(obj.DisplayName))
                DisplayName = obj.MailAddress;
            else
                DisplayName = obj.DisplayName;
            if (Identifier == System.Guid.Empty)
                Identifier = System.Guid.NewGuid();
        }
        public dtoGenericModuleMessageRecipient(ModuleObject obj, Person p, String moduleCode = "", String anonymousUser = "")
        {
            MessageNumber = 0;
            IdLanguage = p.LanguageID;
            Type = RecipientType.BCC;
            IdPerson = p.Id;
            ModuleCode = moduleCode;
            if (p.TypeID == (int)UserTypeStandard.Guest || p.TypeID == (int)UserTypeStandard.PublicUser)
            {
                MailAddress = "";
                DisplayName = anonymousUser;
            }
            else
            {
                MailAddress = p.Mail;
                DisplayName = p.SurnameAndName;
            }
            Name = p.Name;
            Surname = p.Surname;
            IdProfileType = p.TypeID;
            IsAutoGeneratedPerson = true;
            IdModuleObject = obj.ObjectLongID;
            IdModuleType = obj.ObjectTypeID;
            if (Identifier == System.Guid.Empty)
                Identifier = System.Guid.NewGuid();
        }
        public dtoGenericModuleMessageRecipient(ModuleObject obj, Person p, Role role, String moduleCode = "", String anonymousUser = "")
            : this(obj,p, moduleCode, anonymousUser)
        {
            IsAutoGeneratedPerson = true;
            IdRole= (role==null) ? 0 : role.Id;
        }
        public void UpdatePersonInfo(Person p, String anonymousUser="")
        {
            IdLanguage = p.LanguageID;
            if (p == null)
            {
                IdProfileType = (int)UserTypeStandard.Guest;
                MailAddress = "";
                DisplayName = anonymousUser;
                Name = "";
                Surname = "";
            }
            else
            {
                if (p.TypeID == (int)UserTypeStandard.Guest || p.TypeID == (int)UserTypeStandard.PublicUser)
                {
                    MailAddress = "";
                    DisplayName = anonymousUser;
                }
                else
                {
                    MailAddress = p.Mail;
                    DisplayName = p.SurnameAndName;
                }
                Name = p.Name;
                Surname = p.Surname;
                IdProfileType = p.TypeID;
            }
        }

        public List<dtoDisplayUserMessageInfo> GetMessagesWithIdentifier() {
            if (Messages == null || !Messages.Any())
                return new List<dtoDisplayUserMessageInfo>();
            else
                return Messages.OrderByDescending(m=>m.SentOn).Select(m => new dtoDisplayUserMessageInfo() { RecipientIdentifier = Identifier, Message = m, IdPerson= this.IdPerson }).ToList();
        }
    }
}