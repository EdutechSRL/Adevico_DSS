<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping
xmlns="urn:nhibernate-mapping-2.2"
    assembly="lm.Comol.Modules.CallForPapers"
    namespace="lm.Comol.Modules.CallForPapers.Advanced.Domain">

    <class name="AdvCommission" table="CP_Adv_Commission" optimistic-lock ="version" discriminator-value="1">

        <id name="Id" column="Id" type="Int64">
            <generator class="native"/>
        </id>

        <version name="TimeStamp"
            generated="always"
            unsaved-value="null"
            type="BinaryBlob">
            <column name="_Timestamp"
                not-null="false"
                sql-type="timestamp"/>
        </version>

        <many-to-one name="Step" class="lm.Comol.Modules.CallForPapers.Advanced.Domain.AdvStep"
            column="StepId" foreign-key="StepId" cascade="none" not-found="ignore" />

        <many-to-one name="Call" class="lm.Comol.Modules.CallForPapers.Domain.BaseForPaper" 
            column="CallId" foreign-key="CallId" cascade="none" />

        <property name="Name" type="String" column="Name" />
        <property name="Description" type="String" column="Description" />

        <property name="IsMaster" type="Boolean" column="IsMaster" />
        <property name="MaxValue" type="Double" column="MaxValue" />
      
        <property name="Tags" type="String" column="Tags" />
      
        <property name="Status" type="lm.Comol.Modules.CallForPapers.Advanced.CommissionStatus,lm.Comol.Modules.CallForPapers" column="Status" />
        <!--<property name="Status" type="lm.Comol.Modules.CallForPapers.Advanced.StepStatus,lm.Comol.Modules.CallForPapers" column="Status" />-->

      <property name="EvalType" type="lm.Comol.Modules.CallForPapers.Advanced.EvalType,lm.Comol.Modules.CallForPapers" column="EvalType" />
      <property name="EvalMinValue" type="Int32" column="EvalMinValue" />
      <property name="EvalBoolBlock" type="Boolean" column="EvalBoolBlock" />

      <many-to-one name="VerbaleLink" class="lm.Comol.Core.DomainModel.ModuleLink" column="VerbaleLinkId" foreign-key="VerbaleLinkId" cascade="none"  />
      
      
        <many-to-one name="President" class="lm.Comol.Core.DomainModel.litePerson" 
            column="PresidentId" foreign-key="PresidentId" cascade="none" not-found="ignore" />

        <many-to-one name="Secretary" class="lm.Comol.Core.DomainModel.litePerson" 
            column="SecretaryId" foreign-key="SecretaryId" cascade="none" not-found="ignore" />

        <bag name="Members" table="CP_Adv_Member" inverse="true" lazy="false" fetch="subselect" cascade="all-delete-orphan">
            <key column="CommissionId" foreign-key="Id"/>
            <one-to-many class="lm.Comol.Modules.CallForPapers.Advanced.Domain.AdvMember, lm.Comol.Modules.CallForPapers"/>
        </bag>

      <bag name="Criteria" table="CP_Criterion" inverse="true" lazy="false" fetch="subselect" cascade="all-delete-orphan">
        <key column="IdCommitteeAdv" foreign-key="Id"/>
        <one-to-many class="lm.Comol.Modules.CallForPapers.Domain.Evaluation.BaseCriterion, lm.Comol.Modules.CallForPapers"/>
      </bag>

      <!--<bag name="Evaluations" table="CP_Evaluation" inverse="true" lazy="false" fetch="subselect" cascade="none" where="_Deleted=0">
        <key column="IdAdvCommission" foreign-key="Id"/>
        <one-to-many class="lm.Comol.Modules.CallForPapers.Domain.Evaluation.Evaluation, lm.Comol.Modules.CallForPapers"/>
      </bag>-->

      <property name="CreatedOn" type="DateTime" column="_CreatedOn" />
        
        <many-to-one name="CreatedBy" class="lm.Comol.Core.DomainModel.litePerson" column="_CreatedBy"
            foreign-key="_CreatedBy" cascade="none" not-found="ignore" />
        
        <property name="CreatorProxyIpAddress" type="String" column="_CreatedProxyIPaddress" />
        <property name="CreatorIpAddress" type="String" column="_CreatedIPaddress" />

        <property name="ModifiedOn" type="DateTime" column="_ModifiedOn" />
        
        <many-to-one name="ModifiedBy" class="lm.Comol.Core.DomainModel.litePerson" column="_ModifiedBy"
            foreign-key="_ModifiedBy" cascade="none" not-found="ignore"/>
        
        <property name="ModifiedProxyIpAddress" type="String" column="_ModifiedProxyIPaddress" />
        <property name="ModifiedIpAddress" type="String" column="_ModifiedIPaddress" />

        <property name="Deleted" type="lm.Comol.Core.DomainModel.BaseStatusDeleted,lm.Comol.Core.DomainModel" column="_Deleted" />

    </class>
</hibernate-mapping>
