<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" assembly="lm.Comol.Modules.CallForPapers" namespace="lm.Comol.Modules.CallForPapers.Domain">
  <class name="TemplateMail" table="CP_TemplateMail" optimistic-lock ="version" discriminator-value="0">
    <id name="Id" column="Id" type="Int64">
      <generator class="native"/>
    </id>
    <discriminator column="Discriminator" type="Int16"  insert="true" not-null="true" ></discriminator>
    <version name="TimeStamp"
   generated="always"
   unsaved-value="null"
   type="BinaryBlob">
      <column name="_Timestamp"
              not-null="false"
              sql-type="timestamp"/>
    </version>
    <many-to-one name="Call" class="lm.Comol.Modules.CallForPapers.Domain.BaseForPaper" column="IdCall" foreign-key="IdCall" cascade="none"  />
    <property name="IdLanguage" type="Int32" column="IdLanguage" />
    <property name="Name" type="String" column="Name" />
    <property name="Body" type="String" column="Body" />
    <property name="Subject" type="String" column="Subject"/>
    <component name="MailSettings" class="lm.Comol.Core.MailCommons.Domain.Messages.MessageSettings,lm.Comol.Core.MailCommons">
      <property name="IsBodyHtml" type="Boolean" column="isHtml" />
      <property name="NotifyToSender" type="Boolean" column="NotifyToSender" />
      <property name="CopyToSender" type="Boolean" column="CopyToSender" />
      <property name="SenderType" type="lm.Comol.Core.MailCommons.Domain.SenderUserType,lm.Comol.Core.MailCommons" column="SenderType" />
      <property name="PrefixType" type="lm.Comol.Core.MailCommons.Domain.SubjectPrefixType,lm.Comol.Core.MailCommons" column="SubjectType" />
      <property name="Signature" type="lm.Comol.Core.MailCommons.Domain.Signature,lm.Comol.Core.MailCommons" column="SignatureType" />
      <property name="IdSkin" type="Int64" column="IdSkin"/>
    </component>

    <property name="CreatedOn" type="DateTime" column="_CreatedOn" />
    <many-to-one name="CreatedBy" class="lm.Comol.Core.DomainModel.litePerson" column="_CreatedBy" foreign-key="_CreatedBy" cascade="none" />
    <property name="ModifiedOn" type="DateTime" column="_ModifiedOn" />
    <many-to-one name="ModifiedBy" class="lm.Comol.Core.DomainModel.litePerson" column="_ModifiedBy" foreign-key="_ModifiedBy" cascade="none" />
    <property name="CreatorProxyIpAddress" type="String" column="_CreatedProxyIPaddress" />
    <property name="CreatorIpAddress" type="String" column="_CreatedIPaddress" />
    <property name="ModifiedProxyIpAddress" type="String" column="_ModifiedProxyIPaddress" />
    <property name="ModifiedIpAddress" type="String" column="_ModifiedIPaddress" />
    <property name="Deleted" type="lm.Comol.Core.DomainModel.BaseStatusDeleted,lm.Comol.Core.DomainModel" column="_Deleted" />
    
    <subclass name ="lm.Comol.Modules.CallForPapers.Domain.ManagerTemplateMail, lm.Comol.Modules.CallForPapers" discriminator-value ="1">
      <property name="NotifyFields" type="lm.Comol.Modules.CallForPapers.Domain.NotifyFields, lm.Comol.Modules.CallForPapers" column="NotifyFields" />
      <property name="NotifyTo" type="String" column="NotifyTo" />
    </subclass>
    <subclass name ="lm.Comol.Modules.CallForPapers.Domain.SubmitterTemplateMail, lm.Comol.Modules.CallForPapers" discriminator-value ="2">
      <many-to-one name="SubmitterType" class="lm.Comol.Modules.CallForPapers.Domain.SubmitterType, lm.Comol.Modules.CallForPapers" column="IdSubmitterType" foreign-key="IdSubmitterType" cascade="none" />
    </subclass>
  </class>
</hibernate-mapping>