<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" assembly="lm.Comol.Modules.CallForPapers" namespace="lm.Comol.Modules.CallForPapers.Domain">
  <class name="UserSubmission" table="CP_UserSubmission" optimistic-lock ="version">
    <id name="Id" column="Id" type="Int64">
      <generator class="native"/>
    </id>
    <version name="TimeStamp"
   generated="always"
   unsaved-value="null"
   type="BinaryBlob">
      <column name="_Timestamp"
              not-null="false"
              sql-type="timestamp"/>
    </version>
    <many-to-one name="Community" class="lm.Comol.Core.DomainModel.liteCommunity" column="IdCommunity" foreign-key="IdCommunity" cascade="none"  />
    <many-to-one name="Call" class="lm.Comol.Modules.CallForPapers.Domain.BaseForPaper" column="IdCallForPaper" foreign-key="IdCallForPaper" cascade="none"  />
    <!--<bag name="FieldsValues" table="CP_FieldValue" lazy="false" fetch="subselect" cascade="all-delete-orphan">
      <key column="IdUserSubmission" foreign-key="Id"/>
      <one-to-many class="lm.Comol.Modules.CallForPapers.Domain.FieldValue, lm.Comol.Modules.CallForPapers"/>
    </bag>-->
    <property name="Status" type="lm.Comol.Modules.CallForPapers.Domain.SubmissionStatus, lm.Comol.Modules.CallForPapers" column="Status" />
    <many-to-one name="Owner" class="lm.Comol.Core.DomainModel.litePerson" column="IdPerson" foreign-key="IdPerson" cascade="none" />
    <many-to-one name="Type" class="lm.Comol.Modules.CallForPapers.Domain.SubmitterType" column="IdSubmitterType" foreign-key="IdSubmitterType" cascade="none"  />
    <bag name="Files" table="CP_SubmittedFile" lazy="false" fetch="subselect" cascade="all-delete-orphan">
      <key column="IdUserSubmission" foreign-key="Id"/>
      <one-to-many class="lm.Comol.Modules.CallForPapers.Domain.SubmittedFile, lm.Comol.Modules.CallForPapers"/>
    </bag>
    <bag name="Revisions" table="CP_Revision" lazy="false" fetch="subselect" cascade="all-delete-orphan" inverse="true">
      <key column="IdUserSubmission" foreign-key="Id"/>
      <one-to-many class="lm.Comol.Modules.CallForPapers.Domain.Revision, lm.Comol.Modules.CallForPapers"/>
    </bag>
    <property name="SubmittedOn" type="DateTime" column="SubmittedOn" />
    <many-to-one name="SubmittedBy" class="lm.Comol.Core.DomainModel.litePerson" column="SubmittedBy" foreign-key="SubmittedBy" cascade="none"  />
    <property name="ExtensionDate" type="DateTime" column="ExtensionDate" />
    <property name="CreatedOn" type="DateTime" column="_CreatedOn" />
    <many-to-one name="CreatedBy" class="lm.Comol.Core.DomainModel.litePerson" column="_CreatedBy" foreign-key="_CreatedBy" cascade="none" />
    <property name="ModifiedOn" type="DateTime" column="_ModifiedOn" />
    <many-to-one name="ModifiedBy" class="lm.Comol.Core.DomainModel.litePerson" column="_ModifiedBy" foreign-key="_ModifiedBy" cascade="none" />
    <property name="CreatorProxyIpAddress" type="String" column="_CreatedProxyIPaddress" />
    <property name="CreatorIpAddress" type="String" column="_CreatedIPaddress" />
    <property name="ModifiedProxyIpAddress" type="String" column="_ModifiedProxyIPaddress" />
    <property name="ModifiedIpAddress" type="String" column="_ModifiedIPaddress" />
    <property name="Deleted" type="lm.Comol.Core.DomainModel.BaseStatusDeleted,lm.Comol.Core.DomainModel" column="_Deleted" />
    <property name ="UserCode" type="guid" column="UserCode"></property>
    <property name="isAnonymous"  type="boolean" column="isAnonymous"/>
    <property name="isComplete"  type="boolean" column="isComplete"/>
  </class>
</hibernate-mapping>