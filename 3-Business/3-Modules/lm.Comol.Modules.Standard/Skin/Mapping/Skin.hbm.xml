<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" assembly="lm.Comol.Modules.Standard" namespace="lm.Comol.Modules.Standard.Skin.Domain">
    <class name="Skin" table="Skin" >
                
        <!--Begin DomainBase-->
        <id name="Id" column="ID" type="Int64">
            <generator class="native"/>
        </id>
    
        <version name="TimeStamp"
            generated="always"
            unsaved-value="null"
            type="BinaryBlob">
            <column name="_Timestamp"
                not-null="false"
                sql-type="timestamp"/>
        </version>
      
        <property name="CreatedOn" type="DateTime" column="_CreatedOn" />
        <many-to-one name="CreatedBy" class="lm.Comol.Core.DomainModel.Person" column="_CreatedBy" foreign-key="_CreatedBy" cascade="none" />
        <property name="ModifiedOn" type="DateTime" column="_ModifiedOn" />
        <many-to-one name="ModifiedBy" class="lm.Comol.Core.DomainModel.Person" column="_ModifiedBy" foreign-key="_ModifiedBy" cascade="none" />
        <property name="CreatorProxyIpAddress" type="String" column="_CreatedProxyIPaddress" />
        <property name="CreatorIpAddress" type="String" column="_CreatedIPaddress" />
        <property name="ModifiedProxyIpAddress" type="String" column="_ModifiedProxyIPaddress" />
        <property name="ModifiedIpAddress" type="String" column="_ModifiedIPaddress" />
        <property name="Deleted" type="lm.Comol.Core.DomainModel.BaseStatusDeleted,lm.Comol.Core.DomainModel" column="_Deleted" />
        <!--End DomainBase-->

        <property name="Name" type="String" column="Name" />
        <property name="MainCss" type="String" column="MainCss" />
        <property name="IECss" type="String" column="IECss" />
        <property name="AdminCss" type="String" column="AdminCss" />
        <property name="LoginCss" type="String" column="LoginCss" />
        <property name="IsPortal" type="Boolean" column="IsPortal" />
        <property name="IsModule" type="Boolean" column="IsModule" />

        <property name="OverrideVoidFooterLogos" type="Boolean" column="OverrideVoidFooterLogos"/>
        
        <!--<many-to-one name="HeaderTemplate" class="lm.Comol.Modules.Standard.Skin.Domain.HeaderTemplate" column="HeaderTemplateId" foreign-key="HeaderTemplateId" cascade="none" />

        <many-to-one name="FooterTemplate" class="lm.Comol.Modules.Standard.Skin.Domain.FooterTemplate" column="FooterTemplateId" foreign-key="FooterTemplateId" cascade="none" />-->

        <bag name="FooterText" table="Skin_FootText" fetch="subselect" cascade="all-delete-orphan"  inverse="true">
            <key column="SkinId" foreign-key="ID"/>
            <one-to-many class="lm.Comol.Modules.Standard.Skin.Domain.FooterText"/>
        </bag>

        <bag name="FooterLogos" table="Skin_Logo" fetch="subselect" cascade="all-delete-orphan" order-by="DisplayOrder asc" where="IsHeader=0"  inverse="true">
            <key column="SkinId" foreign-key="ID"/>
            <one-to-many class="lm.Comol.Modules.Standard.Skin.Domain.FooterLogo"/>
        </bag>
        <bag name="HeaderLogos" table="Skin_Logo" fetch="subselect" cascade="all-delete-orphan" where="IsHeader=1"  inverse="true">
            <key column="SkinId" foreign-key="ID"/>
            <one-to-many class="lm.Comol.Modules.Standard.Skin.Domain.HeaderLogo"/>
        </bag>
        
        <bag name="Communities" table="Skin_Share" cascade="all-delete-orphan" lazy="false" where="Discriminator=1"  inverse="true">
            <key column="SkinId" foreign-key="ID"/>
            <one-to-many class="lm.Comol.Modules.Standard.Skin.Domain.Skin_ShareCommunity"/>
        </bag>
        
        <bag name="Organizations" table="Skin_Share" cascade="all-delete-orphan" lazy="false" where="Discriminator=2"  inverse="true">
            <key column="SkinId" foreign-key="ID"/>
            <one-to-many class="lm.Comol.Modules.Standard.Skin.Domain.Skin_ShareOrganization"/>
        </bag>

        
        <many-to-one name="HeaderTemplate" class="lm.Comol.Modules.Standard.Skin.Domain.HeaderTemplate" column="HeaderTemplateId" foreign-key="HeaderTemplateId" cascade="none" />
        <many-to-one name="FooterTemplate" class="lm.Comol.Modules.Standard.Skin.Domain.FooterTemplate" column="FooterTemplateId" foreign-key="FooterTemplateId" cascade="none" />
    </class>
</hibernate-mapping>